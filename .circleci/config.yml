version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/aws:2023.12

jobs:
  build-and-deploy:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Validate Required Variables
          command: |
            for var in AWS_REGION AWS_ACCOUNT_ID ECR_REPO_NAME CLUSTER_NAME SERVICE_NAME TASK_DEFINITION_FAMILY; do
              if [ -z "${!var}" ]; then
                echo "❌ $var is not set"
                exit 1
              fi
            done

      - run:
          name: Login to Amazon ECR
          command: |
            aws ecr get-login-password --region $AWS_REGION | \
              docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - run:
          name: Build and Push Docker Image to ECR
          command: |
            IMAGE_TAG="${CIRCLE_SHA1:0:7}"
            ECR_IMAGE="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG"

            docker build -t $ECR_IMAGE ./app
            docker push $ECR_IMAGE

      - run:
          name: Register New Task Definition Revision
          command: |
            IMAGE_TAG="${CIRCLE_SHA1:0:7}"
            ECR_IMAGE="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG"

            # Get the current task definition
            aws ecs describe-task-definition \
              --task-definition $TASK_DEFINITION_FAMILY \
              --region $AWS_REGION > task-def.json

            # Extract relevant fields and inject new image
            NEW_TASK_DEF=$(cat task-def.json | jq --arg IMAGE "$ECR_IMAGE" \
              '.taskDefinition | {
                family: .family,
                executionRoleArn: .executionRoleArn,
                networkMode: .networkMode,
                requiresCompatibilities: .requiresCompatibilities,
                cpu: .cpu,
                memory: .memory,
                containerDefinitions: [.containerDefinitions[0] | .image = $IMAGE]
              }')

            echo "$NEW_TASK_DEF" > new-task-def.json

            # Register the new revision
            aws ecs register-task-definition \
              --cli-input-json file://new-task-def.json \
              --region $AWS_REGION

      - run:
          name: Deploy New Revision to ECS
          command: |
            aws ecs update-service \
              --cluster $CLUSTER_NAME \
              --service $SERVICE_NAME \
              --task-definition $TASK_DEFINITION_FAMILY \
              --region $AWS_REGION

workflows:
  version: 2
  deploy:
    jobs:
      - build-and-deploy
